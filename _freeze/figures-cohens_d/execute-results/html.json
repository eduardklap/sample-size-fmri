{
  "hash": "dbf96bb02dc38b2ff0e778e4e0f7e4ac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Code for Figures 1-2 based on Cohen's d\"\nauthor: \"Eduard Klapwijk\"\n---\n\n\nLoad libraries to produce figures:\n\n::: {.cell}\n\n```{.r .cell-code}\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| error: FALSE\n#| warning: FALSE\n\n# load libraries\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| error: FALSE\n#| warning: FALSE\n\nlibrary(patchwork)\nlibrary(ggplot2)\nlibrary(ggpubr)\n# install neuroUp package from CRAN\n# install.packages(\"neuroUp\")\n# load neuroUp\nlibrary(neuroUp)\n```\n:::\n\n\nSet seed and create Figure 1a for the Feedback task DLPFC ROI:\n\n::: {#cell-fig-1a .cell}\n\n```{.r .cell-code}\n#| label: fig-1a\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# set seed\nset.seed(1234)\n\n# Estimate differences (unstandardized and Cohen's d)\nfeedback_fig <- estim_diff(data = feedback,\n                           vars_of_interest = c(\"mfg_learning\",\n                                                \"mfg_application\"),\n                           sample_size = 20:271, \n                           k = 1000, \n                           name = \"A. Feedback DLPFC\")\n\n# plot figure 1a (and remove legend using ggplot2)\nfeedback_fig$fig_cohens_d + theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-1a-1.png){#fig-1a width=672}\n:::\n:::\n\n\nPlot Figure 2a for the Feedback task DLPFC ROI:\n\n::: {#cell-fig-2a .cell}\n\n```{.r .cell-code}\n#| label: fig-2a\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# plot figure 2a\nfeedback_fig$fig_d_nozero\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-2a-1.png){#fig-2a width=672}\n:::\n:::\n\n\nSet seed and create Figure 1b for the Gambling task NAcc ROI:\n\n::: {#cell-fig-1b .cell}\n\n```{.r .cell-code}\n#| label: fig-1b\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# set seed\nset.seed(1234)\n\n# Estimate differences (unstandardized and Cohen's d)\ngambling_fig <- estim_diff(data = gambling, \n                           vars_of_interest = c(\"lnacc_self_win\", \n                                                \"lnacc_self_loss\"), \n                           sample_size = 20:221, \n                           k = 1000, \n                           name = \"B. Gambling NAcc\")\n# plot figure 1b (and remove legend using ggplot2)\ngambling_fig$fig_cohens_d + theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-1b-1.png){#fig-1b width=672}\n:::\n:::\n\n\nPlot Figure 2b for the  Gambling task NAcc ROI:\n\n::: {#cell-fig-2b .cell}\n\n```{.r .cell-code}\n#| label: fig-2b\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# plot figure 2b\ngambling_fig$fig_d_nozero\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-2b-1.png){#fig-2b width=672}\n:::\n:::\n\n\nSet seed and create Figure 1c for the Self-evaluations task mPFC ROI:\n\n::: {#cell-fig-1c .cell}\n\n```{.r .cell-code}\n#| label: fig-1c\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# set seed\nset.seed(1234)\n\n# Estimate differences (unstandardized and Cohen's d)\nselfeval_fig <- estim_diff(data = self_eval, \n                           vars_of_interest = c(\"mpfc_self\", \n                                                \"mpfc_control\"),\n                           sample_size = 20:149, \n                           k = 1000, \n                           name = \"C. Self-evaluations mPFC\")\n\n# plot figure 1c (and remove legend using ggplot2)\nselfeval_fig$fig_cohens_d + theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-1c-1.png){#fig-1c width=672}\n:::\n:::\n\n\nPlot Figure 2c for the Self-evaluations task mPFC ROI:\n\n::: {#cell-fig-2c .cell}\n\n```{.r .cell-code}\n#| label: fig-2c\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# plot figure 2c\nselfeval_fig$fig_d_nozero\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-2c-1.png){#fig-2c width=672}\n:::\n:::\n\n\nSet seed and create Figure 1d for the Gaining for self task NAcc ROI:\n\n::: {#cell-fig-1d .cell}\n\n```{.r .cell-code}\n#| label: fig-1d\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# set seed\nset.seed(1234)\n\n# Estimate differences (unstandardized and Cohen's d)\nvicar_char_fig <- estim_diff(data = vicar_char, \n                             vars_of_interest = c(\"nacc_selfgain\", \n                                                  \"nacc_bothnogain\"),\n                             sample_size = 20:156, \n                             k = 1000, \n                             name = \"D. Gaining self NAcc\")\n\n# plot figure 1d (and remove legend using ggplot2)\nvicar_char_fig$fig_cohens_d + theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-1d-1.png){#fig-1d width=672}\n:::\n:::\n\n\nPlot Figure 2d for the Gaining for self task NAcc ROI:\n\n::: {#cell-fig-2d .cell}\n\n```{.r .cell-code}\n#| label: fig-2d\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# plot figure 2d\nvicar_char_fig$fig_d_nozero\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-2d-1.png){#fig-2d width=672}\n:::\n:::\n\n\nPlot a mock figure with similar aesthetics to create an overall ggplot legend. \n\nThe only purpose of this code chunk is to make a simple overall legend to show that in light blue a subset of the individual permutations is shown and in purple the overall values. The original legends with permutation numbers will not be shown in the overall figure to create a cleaner look.\nThe approach taken here was to use a simple mock ggplot figure and then use the `ggpubr` package to isolate the legend and display the legend together with the 4 actual plots.\n\n::: {#cell-fig-legend .cell}\n\n```{.r .cell-code}\n#| label: fig-legend\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n\n# make simple mock data to create overall legend\nlegend_data <- tibble(legend = c(\"10 permutations\",\"Overall\"), N = 1:2, scores = c(1.6, 1.8),\n                      lower = c(.4, .6), upper = c(2.8, 3))\n# factorize legend and N\nlegend_data$legend <- factor(legend_data$legend)\nlegend_data$N <- as.factor(legend_data$N)\n\n# plot data to produce legend\nfigure_legend <- ggplot2::ggplot(data = legend_data, \n                               ggplot2::aes(x = .data$N, \n                                            y = .data$scores,\n                                            colour = .data$legend,\n                                            size = .data$legend) ) +\n  ggplot2::theme_classic() +\n  ggplot2::geom_point(position = ggplot2::position_dodge(.8),\n                      ggplot2::aes(x = .data$N, \n                                   y = .data$scores,\n                                   colour = .data$legend,\n                                   size = .data$legend)) +\n  ggplot2::scale_size_manual(values = c(2, 4))  +\n  ggplot2::geom_errorbar(ggplot2::aes(ymin = .data$lower, ymax = .data$upper),\n                         linewidth = .5, \n                         position = ggplot2::position_dodge(.1)) +\n  ggplot2::scale_linetype_manual(values = c(1, 6)) +\n  ggplot2::scale_color_manual(values = c(\"#56B4E9\",\"#CC79A7\") ) +\n  theme(legend.title=element_blank())\n\n# use ggpubr get_legend to plot legend only\nleg <- ggpubr::get_legend(figure_legend)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\n#| label: fig-legend\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n\nsimple_legend <- ggpubr::as_ggplot(leg)\n\n# show the simple overall legend\nsimple_legend\n```\n\n::: {.cell-output-display}\n![](figures-cohens_d_files/figure-html/fig-legend-1.png){#fig-legend width=672}\n:::\n:::\n\n\nPlot Figure 1 (4 data sets combined):\n\n::: {#cell-fig-1-total .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-1-total\n#| eval: TRUE\n#| echo: FALSE\n#| message: FALSE\n#| warning: FALSE\n#| fig-height: 6\n#| fig-width: 10\n#| fig-cap: \"Estimates of task effects for five different sample sizes (starting with $N = 20$, then 1/5th parts of the total dataset). For each sample size 10 randomly chosen HDCI’s out of the 1000 HDCI’s computed are displayed (in light blue). The average estimate with credible interval summarizing the 1000 HDCI’s for each sample size are plotted in reddish purple. DLPFC = dorsolateral prefrontal cortex; mPFC = medial prefrontal cortex; NAcc = nucleus accumbens.\"\n# plot figure 1 using patchwork library\nfeedback_fig$fig_cohens_d + theme(legend.position = \"none\") + \n  gambling_fig$fig_cohens_d + theme(legend.position = \"none\") + \n  selfeval_fig$fig_cohens_d + theme(legend.position = \"none\") + \n  vicar_char_fig$fig_cohens_d + theme(legend.position = \"none\") +\n  inset_element(simple_legend, \n                left = 1.7, bottom = 3.8, right = 0, top = 0, \n                on_top = T, align_to = 'full')\n```\n\n::: {.cell-output-display}\n![Estimates of task effects for five different sample sizes (starting with $N = 20$, then 1/5th parts of the total dataset). For each sample size 10 randomly chosen HDCI’s out of the 1000 HDCI’s computed are displayed (in light blue). The average estimate with credible interval summarizing the 1000 HDCI’s for each sample size are plotted in reddish purple. DLPFC = dorsolateral prefrontal cortex; mPFC = medial prefrontal cortex; NAcc = nucleus accumbens.](figures-cohens_d_files/figure-html/fig-1-total-1.png){#fig-1-total width=960}\n:::\n:::\n\n\nPlot Figure 2 (4 data sets combined):\n\n::: {#cell-fig-2 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-2\n#| eval: TRUE\n#| echo: FALSE\n#| message: FALSE\n#| warning: FALSE\n#| fig-height: 6\n#| fig-width: 10\n#| fig-cap: \"For each task, for five different sample sizes (starting with $N = 20$, then 1/5th parts of the total dataset), the proportion of intervals not containing the value 0 is plotted in reddish purple.\"\n# plot figure 2 using patchwork library\nfeedback_fig$fig_d_nozero + ylab(label = \"Proportion not containing zero\") +\n  gambling_fig$fig_d_nozero + ylab(label = \"Proportion not containing zero\") + \n  selfeval_fig$fig_d_nozero + ylab(label = \"Proportion not containing zero\") +\n  vicar_char_fig$fig_d_nozero + ylab(label = \"Proportion not containing zero\") \n```\n\n::: {.cell-output-display}\n![For each task, for five different sample sizes (starting with $N = 20$, then 1/5th parts of the total dataset), the proportion of intervals not containing the value 0 is plotted in reddish purple.](figures-cohens_d_files/figure-html/fig-2-1.png){#fig-2 width=960}\n:::\n:::\n\n\nExtract numbers to make table 2:\n\n::: {.cell}\n\n```{.r .cell-code}\n#| label: data-summary-cohens\n#| eval: TRUE\n#| echo: TRUE\n#| message: FALSE\n#| warning: FALSE\n# first extract tibble from results (select mean only)\nfeedback_sum <- as_tibble(feedback_fig$tbl_select) %>%\n  dplyr::filter(permutation == \"Overall\")\ngambling_sum <- as_tibble(gambling_fig$tbl_select) %>%\n  dplyr::filter(permutation == \"Overall\")\nselfeval_sum <- as_tibble(selfeval_fig$tbl_select) %>%\n  dplyr::filter(permutation == \"Overall\")\ngaining_sum <- as_tibble(vicar_char_fig$tbl_select) %>%\n  dplyr::filter(permutation == \"Overall\")\n```\n:::\n\n\nUse numbers to produce a table in text:\n\n| task             | brain region | $n = 20$                                                                                                                             | $n = 2/5$                                                                                                                                                             | $n = 3/5$                                                                                                                                                             | $n = 4/5$                                                                                                                                                             | $N = total$                                                                                                                                                           |\n|-----------|-----------|-----------|-----------|-----------|-----------|-----------|\n| Feedback         | DLPFC        | **2.03** (1.29, 2.76) | **1.89** (1.54, 2.25), *n* = 70 | **1.88** (1.62, 2.15), *n* = 120 | **1.87** (1.65, 2.1), *n* = 170 | **1.87** (1.69, 2.04), *N* = 271 |\n| Gambling         | NAcc         | **0.8** (0.25, 1.34) | **0.74** (0.45, 1.03), *n* = 60 | **0.73** (0.51, 0.96), *n* = 100 | **0.73** (0.54, 0.92), *n* = 140 | **0.73** (0.58, 0.88), *N* = 221 |\n| Self-evaluations | mPFC         | **0.5** (0.02, 0.98) | **0.47** (0.17, 0.77), *n* = 46 | **0.46** (0.22, 0.7), *n* = 72 | **0.46** (0.26, 0.66), *n* = 98 | **0.46** (0.29, 0.62), *N* = 149 |\n| Gaining self     | NAcc         | **0.64** (0.14, 1.14)    | **0.59** (0.27, 0.91), *n* = 47     | **0.58** (0.32, 0.84), *n* = 74     | **0.58** (0.36, 0.8), *n* = 101     | **0.57** (0.39, 0.75), *N* = 156     |\n",
    "supporting": [
      "figures-cohens_d_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}